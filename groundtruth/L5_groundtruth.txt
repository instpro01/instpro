prepare|clflush	DS:[rax]
trigger|mov	eax, DS:[rbp + 0xfffffffffffff778]#add	eax, 0x1#mov	DS:[rbp + 0xfffffffffffff778], eax#mov	eax, DS:[rbp + 0xfffffffffffff778]#cmp	eax, 0x63#jle	0xffffffffffffffe6
encode|mov edx, DS:[t7 + 0x2009c9]#mov eax, DS:[t7 + 0x2009c7]#imul edx, eax#mov ecx, DS:[t7 + 0x2009c2]#mov eax, DS:[t7 + 0x2009c4]#imul eax, ecx#sub edx, eax#mov eax, edx#sub eax, 0x14#cdqe rax#mov DS:[8*rax + 0x621160], 0#mov rax, DS:[t7 + 0x2209e9]#movzx ebx, DS:[rax + 0x601080]#movzx eax, eax#sal eax, 0x9#cdqe rax#movzx eax, DS:[rax + 0x601160]#movzx edx, edx#mov rax, DS:[t7 + 0x2009a1]#and rax, rdx#mov DS:[t7 + 0x200997], rax
recover|rdtscp#mov	esi, ecx#mov	rcx, DS:[rbp + 0xffffffffffffff90]#mov	DS:[rcx], esi#sal	rdx, 0x20#or	rax, rdx#mov	r12, rax#mov	rax, DS:[rbp + 0xffffffffffffffd8]#movzx	eax, DS:[rax]#movzx	edx, eax#mov	eax, DS:[rbp + 0xffffffffffffff8c]#and	eax, edx#mov	DS:[rbp + 0xffffffffffffff8c], eax#lea	rax, DS:[rbp + 0xffffffffffffff8c]#mov	DS:[rbp + 0xffffffffffffff98], rax#rdtscp
